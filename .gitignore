# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# Data 
data/
Victor BIGAND/Biblio/
Victor BIGAND/MNIST/data
Victor BIGAND/TECHNO/techno_resampled.dat
runs

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Théo
Théo NGUYEN/helper_plot.py
Théo NGUYEN/VAE_MNIST_model
Théo NGUYEN/SING - Symbol to Instrument Neural Generator.pdf
Théo NGUYEN/Wasserstein Auto-Encoders.pdf
techno_resampled.dat
Théo NGUYEN/config.yaml
Théo NGUYEN/main.py
Théo NGUYEN/VAE_test sur Dataset.ipynb
Théo NGUYEN/configs/config.py
Théo NGUYEN/dataset/Techno_Dataset.py
Théo NGUYEN/models/Decoder.py
Théo NGUYEN/models/Encoder.py
Théo NGUYEN/models/VAE_raw.py
Théo NGUYEN/train/Spectral_Loss_Complex.py
Théo NGUYEN/train/Train.py


# Quentin
Quentin_Le_Gall/main/dataset/techno_resampled.dat
Quentin_Le_Gall/main/Debuger.ipynb
Quentin_Le_Gall/main/Test.py
main/dataset/techno_resampled.dat
main/Debuger.ipynb
main/Test.py

Théo NGUYEN/main/config.yaml
Théo NGUYEN/main/configs/config.py
Théo NGUYEN/main/dataset/Techno_Dataset.py
Théo NGUYEN/main/models/Decoder.py
Théo NGUYEN/main/models/Encoder.py
Théo NGUYEN/main/models/VAE_raw.py
Théo NGUYEN/main/train/Spectral_Loss_Complex.py
Théo NGUYEN/main/train/Train.py
Théo NGUYEN/10a_variational_auto_encoders.ipynb
Théo NGUYEN/main/Debugger.ipynb
